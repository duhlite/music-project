{"ast":null,"code":"import _regeneratorRuntime from \"/Users/DuhLite/Documents/music-search/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/DuhLite/Documents/music-search/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/DuhLite/Documents/music-search/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/DuhLite/Documents/music-search/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/DuhLite/Documents/music-search/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/DuhLite/Documents/music-search/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/DuhLite/Documents/music-search/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/DuhLite/Documents/music-search/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/DuhLite/Documents/music-search/client/src/components/playlist-creator.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    artist: state.previous_artist,\n    song: state.previous_song\n  };\n};\n\nvar ConnectedPlaylistCreator =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ConnectedPlaylistCreator, _Component);\n\n  function ConnectedPlaylistCreator(props) {\n    var _this;\n\n    _classCallCheck(this, ConnectedPlaylistCreator);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ConnectedPlaylistCreator).call(this, props));\n\n    _this.onClick = function () {\n      axios.post('http://localhost:5000/login').then(function (res) {\n        console.log(res.data);\n        window.open(res.data, '_self');\n      }).catch(function (err) {\n        console.log(err);\n      });\n    };\n\n    _this.state = {\n      loggedIn: false,\n      accessToken: ''\n    };\n    _this.onClick = _this.onClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(ConnectedPlaylistCreator, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return axios.get('/playlist');\n\n              case 3:\n                response = _context.sent;\n                console.log(response);\n                _context.next = 10;\n                break;\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](0);\n                console.log(_context.t0);\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 7]]);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.onClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"Log In\"), React.createElement(\"form\", {\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"Song Title\"), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        id: \"songSearch\",\n        ref: this.input,\n        defaultValue: this.props.song,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"Artist Name\"), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        id: \"artistSearch\",\n        ref: this.input,\n        defaultValue: this.props.artist,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Submit\",\n        className: \"btn btn-success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return ConnectedPlaylistCreator;\n}(Component);\n\nvar PlaylistCreator = connect(mapStateToProps)(ConnectedPlaylistCreator);\nexport default PlaylistCreator;","map":{"version":3,"sources":["/Users/DuhLite/Documents/music-search/client/src/components/playlist-creator.js"],"names":["React","Component","connect","axios","mapStateToProps","state","artist","previous_artist","song","previous_song","ConnectedPlaylistCreator","props","onClick","post","then","res","console","log","data","window","open","catch","err","loggedIn","accessToken","bind","get","response","onSubmit","input","PlaylistCreator"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAC7B,SAAO;AACHC,IAAAA,MAAM,EAAED,KAAK,CAACE,eADX;AAEHC,IAAAA,IAAI,EAAEH,KAAK,CAACI;AAFT,GAAP;AAIH,CALD;;IAOMC,wB;;;;;AACF,oCAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,kGAAMA,KAAN;;AADe,UAmBnBC,OAnBmB,GAmBT,YAAM;AACZT,MAAAA,KAAK,CAACU,IAAN,CAAW,6BAAX,EACKC,IADL,CACU,UAAAC,GAAG,EAAI;AACTC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB;AACAC,QAAAA,MAAM,CAACC,IAAP,CAAYL,GAAG,CAACG,IAAhB,EAAqB,OAArB;AACH,OAJL,EAKKG,KALL,CAKW,UAAAC,GAAG,EAAI;AACVN,QAAAA,OAAO,CAACC,GAAR,CAAYK,GAAZ;AACH,OAPL;AAQH,KA5BkB;;AAEf,UAAKjB,KAAL,GAAa;AACTkB,MAAAA,QAAQ,EAAE,KADD;AAETC,MAAAA,WAAW,EAAE;AAFJ,KAAb;AAKA,UAAKZ,OAAL,GAAe,MAAKA,OAAL,CAAaa,IAAb,uDAAf;AAPe;AAQlB;;;;;;;;;;;;;;;uBAIkCtB,KAAK,CAACuB,GAAN,CAAU,WAAV,C;;;AAAjBC,gBAAAA,Q;AACNX,gBAAAA,OAAO,CAACC,GAAR,CAAYU,QAAZ;;;;;;;AAEAX,gBAAAA,OAAO,CAACC,GAAR;;;;;;;;;;;;;;;;;;6BAeH;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,OAAO,EAAE,KAAKL,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEA;AAAM,QAAA,QAAQ,EAAE,KAAKgB,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAEI;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,SAAS,EAAC,cAFd;AAGI,QAAA,EAAE,EAAC,YAHP;AAII,QAAA,GAAG,EAAE,KAAKC,KAJd;AAKI,QAAA,YAAY,EAAE,KAAKlB,KAAL,CAAWH,IAL7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADJ,EAWI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,EAEI;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,SAAS,EAAC,cAFd;AAGI,QAAA,EAAE,EAAC,cAHP;AAII,QAAA,GAAG,EAAE,KAAKqB,KAJd;AAKI,QAAA,YAAY,EAAE,KAAKlB,KAAL,CAAWL,MAL7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CAXJ,EAqBI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AACI,QAAA,IAAI,EAAC,QADT;AAEI,QAAA,KAAK,EAAC,QAFV;AAGI,QAAA,SAAS,EAAC,iBAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,CArBJ,CAFA,CADJ;AAkCH;;;;EAlEkCL,S;;AAqEvC,IAAM6B,eAAe,GAAG5B,OAAO,CAACE,eAAD,CAAP,CAAyBM,wBAAzB,CAAxB;AAEA,eAAeoB,eAAf","sourcesContent":["import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport axios from 'axios';\n\nconst mapStateToProps = state => {\n    return {\n        artist: state.previous_artist,\n        song: state.previous_song\n    }\n}\n\nclass ConnectedPlaylistCreator extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loggedIn: false,\n            accessToken: ''\n        }\n\n        this.onClick = this.onClick.bind(this)\n    }\n\n    async componentDidMount() {\n            try {\n                const response = await axios.get('/playlist');\n                console.log(response);\n            } catch(error) {\n                console.log(error);\n            }\n    }\n\n    onClick = () => {\n        axios.post('http://localhost:5000/login')\n            .then(res => {\n                console.log(res.data);\n                window.open(res.data,'_self');\n            })\n            .catch(err => {\n                console.log(err);\n            })\n    }\n\n    render() {\n        return (\n            <div>\n                <button onClick={this.onClick}>Log In</button>\n            <form onSubmit={this.onSubmit}>\n                <div className='form-group'>\n                    <label>Song Title</label>\n                    <input\n                        type='text'\n                        className='form-control'\n                        id='songSearch'\n                        ref={this.input}\n                        defaultValue={this.props.song}\n                        />\n                </div>\n                <div className='form-group'>\n                    <label>Artist Name</label>\n                    <input\n                        type='text'\n                        className='form-control'\n                        id='artistSearch'\n                        ref={this.input}\n                        defaultValue={this.props.artist}\n                        />\n                </div>\n                <div className='form-group'>\n                <input \n                    type='submit'\n                    value=\"Submit\" \n                    className='btn btn-success'\n                    />\n                </div>\n            </form>\n            </div>\n        )\n    }\n}\n\nconst PlaylistCreator = connect(mapStateToProps)(ConnectedPlaylistCreator);\n\nexport default PlaylistCreator;"]},"metadata":{},"sourceType":"module"}