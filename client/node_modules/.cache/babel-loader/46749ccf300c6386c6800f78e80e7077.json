{"ast":null,"code":"import _classCallCheck from \"/Users/DuhLite/Documents/music-search/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/DuhLite/Documents/music-search/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/DuhLite/Documents/music-search/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/DuhLite/Documents/music-search/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/DuhLite/Documents/music-search/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/DuhLite/Documents/music-search/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/DuhLite/Documents/music-search/client/src/components/search.js\";\nimport React, { Component } from 'react';\nimport { updateArtist as _updateArtist, updateSong as _updateSong, updateWord as _updateWord } from \"../actions/index\";\nimport { connect } from 'react-redux';\nimport axios from 'axios';\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    word: state.word,\n    song: state.song,\n    artist: state.artist\n  };\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    updateArtist: function updateArtist(artist) {\n      return dispatch(_updateArtist(artist));\n    },\n    updateSong: function updateSong(song) {\n      return dispatch(_updateSong(song));\n    },\n    updateWord: function updateWord(word) {\n      return dispatch(_updateWord(word));\n    }\n  };\n}\n\nvar ConnectedMainSearch =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ConnectedMainSearch, _Component);\n\n  function ConnectedMainSearch(props) {\n    var _this;\n\n    _classCallCheck(this, ConnectedMainSearch);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ConnectedMainSearch).call(this, props));\n\n    _this.wordChange = function (e) {\n      _this.props.updateWord(e.target.value);\n    };\n\n    _this.songChange = function (e) {\n      _this.props.updateSong(e.target.value);\n    };\n\n    _this.artistChange = function (e) {\n      _this.props.updateArtist(e.target.value);\n    };\n\n    _this.onSubmit = _this.onSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(ConnectedMainSearch, [{\n    key: \"onSubmit\",\n    value: function onSubmit(e) {\n      e.preventDefault();\n      var newQuery = {\n        word: this.props.word,\n        song: this.props.song,\n        artist: this.props.artist\n      };\n      axios.post('http://localhost:5000/search', newQuery).then(function (res) {\n        console.log(res);\n        var body = res.data;\n      }).catch(function (err) {\n        console.log(err);\n      });\n      this.props.updateSong('');\n      this.props.updateArtist('');\n      this.props.updateWord('');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"Words\"), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        id: \"wordQuery\",\n        onChange: this.wordChange,\n        value: this.props.word,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"Song Title\"), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        id: \"songQuery\",\n        onChange: this.songChange,\n        value: this.props.song,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"Artist Name\"), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        id: \"artistQuery\",\n        onChange: this.artistChange,\n        value: this.props.artist,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Submit\",\n        className: \"btn btn-success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, this.body));\n    }\n  }]);\n\n  return ConnectedMainSearch;\n}(Component);\n\nvar MainSearch = connect(mapStateToProps, mapDispatchToProps)(ConnectedMainSearch);\nexport default MainSearch;","map":{"version":3,"sources":["/Users/DuhLite/Documents/music-search/client/src/components/search.js"],"names":["React","Component","updateArtist","updateSong","updateWord","connect","axios","mapStateToProps","state","word","song","artist","mapDispatchToProps","dispatch","ConnectedMainSearch","props","wordChange","e","target","value","songChange","artistChange","onSubmit","bind","preventDefault","newQuery","post","then","res","console","log","body","data","catch","err","MainSearch"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {updateArtist,updateSong,updateWord} from \"../actions/index\";\nimport {connect} from 'react-redux';\nimport axios from 'axios';\n\nconst mapStateToProps = state => {\n    return {\n        word: state.word,\n        song: state.song,\n        artist: state.artist\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        updateArtist: artist => dispatch(updateArtist(artist)),\n        updateSong: song => dispatch(updateSong(song)),\n        updateWord: word => dispatch(updateWord(word))\n    }\n}\n\nclass ConnectedMainSearch extends Component {\n    constructor(props) {\n        super(props);\n\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    wordChange = (e) => {\n        this.props.updateWord(e.target.value);\n    };\n\n    songChange = (e) => {\n        this.props.updateSong(e.target.value);\n    }\n\n    artistChange = (e) => {\n        this.props.updateArtist(e.target.value);\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n\n        const newQuery = {\n            word: this.props.word,\n            song: this.props.song,\n            artist: this.props.artist\n        };\n\n        axios.post('http://localhost:5000/search', newQuery)\n            .then(res => {\n                console.log(res);\n                var body = res.data;\n            })\n            .catch(err => {\n                console.log(err);\n            })\n        \n        this.props.updateSong('');\n        this.props.updateArtist('');\n        this.props.updateWord('');\n    }\n\n    render() {\n        return (\n            <div>\n            <form onSubmit={this.onSubmit}>\n                <div className='form-group'>\n                    <label>Words</label>\n                    <input\n                        type='text'\n                        className='form-control'\n                        id='wordQuery'\n                        onChange={this.wordChange}\n                        value = {this.props.word}\n                        />\n                </div>\n                <div className='form-group'>\n                    <label>Song Title</label>\n                    <input\n                        type='text'\n                        className='form-control'\n                        id='songQuery'\n                        onChange={this.songChange}\n                        value={this.props.song}\n                        />\n                </div>\n                <div className='form-group'>\n                    <label>Artist Name</label>\n                    <input\n                        type='text'\n                        className='form-control'\n                        id='artistQuery'\n                        onChange={this.artistChange}\n                        value={this.props.artist}\n                        />\n                </div>\n                <div className='form-group'>\n                <input \n                    type='submit'\n                    value=\"Submit\" \n                    className='btn btn-success'\n                    />\n                </div>\n            </form>\n            <div>\n                {this.body}\n            </div>\n            </div>\n        )\n    }\n}\n\nconst MainSearch = connect(mapStateToProps, mapDispatchToProps)(ConnectedMainSearch);\n\nexport default MainSearch;"]},"metadata":{},"sourceType":"module"}