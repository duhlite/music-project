{"ast":null,"code":"import _classCallCheck from \"/Users/DuhLite/Documents/music-search/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/DuhLite/Documents/music-search/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/DuhLite/Documents/music-search/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/DuhLite/Documents/music-search/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/DuhLite/Documents/music-search/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/DuhLite/Documents/music-search/client/src/components/search.js\";\nimport React, { Component } from 'react';\nimport { updateArtist as _updateArtist, updateSong as _updateSong, updateWord as _updateWord } from \"../actions/index\";\nimport { connect } from 'react-redux';\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    updateArtist: function updateArtist(artist) {\n      return dispatch(_updateArtist(artist));\n    },\n    updateSong: function updateSong(song) {\n      return dispatch(_updateSong(song));\n    },\n    updateWord: function updateWord(word) {\n      return dispatch(_updateWord(word));\n    }\n  };\n}\n\nvar ConnectedMainSearch =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ConnectedMainSearch, _Component);\n\n  function ConnectedMainSearch() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ConnectedMainSearch);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ConnectedMainSearch)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.wordChange = function (e) {\n      _this.props.updateWord(e.target.value);\n    };\n\n    _this.songChange = function (e) {\n      _this.props.updateSong(e.target.value);\n    };\n\n    _this.artistChange = function (e) {\n      _this.props.updateArtist(e.target.value);\n    };\n\n    return _this;\n  }\n\n  _createClass(ConnectedMainSearch, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        for: \"wordQuery\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \"Words\"), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        id: \"wordQuery\",\n        onChange: this.wordChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        for: \"songQuery\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"Song Title\"), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        id: \"songQuery\",\n        onChange: this.songChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        for: \"artistQuery\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Artist Name\"), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        id: \"artistQuery\",\n        onChange: this.artistChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"Submit\")));\n    }\n  }]);\n\n  return ConnectedMainSearch;\n}(Component);\n\nvar MainSearch = connect(null, mapDispatchToProps)(ConnectedMainSearch);\nexport default MainSearch;","map":{"version":3,"sources":["/Users/DuhLite/Documents/music-search/client/src/components/search.js"],"names":["React","Component","updateArtist","updateSong","updateWord","connect","mapDispatchToProps","dispatch","artist","song","word","ConnectedMainSearch","wordChange","e","props","target","value","songChange","artistChange","MainSearch"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,YAAY,IAAZA,aAAR,EAAqBC,UAAU,IAAVA,WAArB,EAAgCC,UAAU,IAAVA,WAAhC,QAAiD,kBAAjD;AACA,SAAQC,OAAR,QAAsB,aAAtB;;AAEA,SAASC,kBAAT,CAA4BC,QAA5B,EAAsC;AAClC,SAAO;AACHL,IAAAA,YAAY,EAAE,sBAAAM,MAAM;AAAA,aAAID,QAAQ,CAACL,aAAY,CAACM,MAAD,CAAb,CAAZ;AAAA,KADjB;AAEHL,IAAAA,UAAU,EAAE,oBAAAM,IAAI;AAAA,aAAIF,QAAQ,CAACJ,WAAU,CAACM,IAAD,CAAX,CAAZ;AAAA,KAFb;AAGHL,IAAAA,UAAU,EAAE,oBAAAM,IAAI;AAAA,aAAIH,QAAQ,CAACH,WAAU,CAACM,IAAD,CAAX,CAAZ;AAAA;AAHb,GAAP;AAKH;;IAEKC,mB;;;;;;;;;;;;;;;;;;UAEFC,U,GAAa,UAACC,CAAD,EAAO;AAChB,YAAKC,KAAL,CAAWV,UAAX,CAAsBS,CAAC,CAACE,MAAF,CAASC,KAA/B;AACH,K;;UAEDC,U,GAAa,UAACJ,CAAD,EAAO;AAChB,YAAKC,KAAL,CAAWX,UAAX,CAAsBU,CAAC,CAACE,MAAF,CAASC,KAA/B;AACH,K;;UAEDE,Y,GAAe,UAACL,CAAD,EAAO;AAClB,YAAKC,KAAL,CAAWZ,YAAX,CAAwBW,CAAC,CAACE,MAAF,CAASC,KAAjC;AACH,K;;;;;;;6BAEQ;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,GAAG,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEI;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,SAAS,EAAC,cAFd;AAGI,QAAA,EAAE,EAAC,WAHP;AAII,QAAA,QAAQ,EAAE,KAAKJ,UAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADJ,EAUI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,GAAG,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAEI;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,SAAS,EAAC,cAFd;AAGI,QAAA,EAAE,EAAC,WAHP;AAII,QAAA,QAAQ,EAAE,KAAKK,UAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CAVJ,EAmBI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,GAAG,EAAC,aAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,EAEI;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,SAAS,EAAC,cAFd;AAGI,QAAA,EAAE,EAAC,aAHP;AAII,QAAA,QAAQ,EAAE,KAAKC,YAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CAnBJ,EA4BI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,iBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBA5BJ,CADA,CADJ;AAkCH;;;;EAjD6BjB,S;;AAoDlC,IAAMkB,UAAU,GAAGd,OAAO,CAAC,IAAD,EAAOC,kBAAP,CAAP,CAAkCK,mBAAlC,CAAnB;AAEA,eAAeQ,UAAf","sourcesContent":["import React, {Component} from 'react';\nimport {updateArtist,updateSong,updateWord} from \"../actions/index\";\nimport {connect} from 'react-redux';\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        updateArtist: artist => dispatch(updateArtist(artist)),\n        updateSong: song => dispatch(updateSong(song)),\n        updateWord: word => dispatch(updateWord(word))\n    }\n}\n\nclass ConnectedMainSearch extends Component {\n\n    wordChange = (e) => {\n        this.props.updateWord(e.target.value);\n    };\n\n    songChange = (e) => {\n        this.props.updateSong(e.target.value);\n    }\n\n    artistChange = (e) => {\n        this.props.updateArtist(e.target.value);\n    }\n    \n    render() {\n        return (\n            <div>\n            <form>\n                <div className='form-group'>\n                    <label for='wordQuery'>Words</label>\n                    <input\n                        type='text'\n                        className='form-control'\n                        id='wordQuery'\n                        onChange={this.wordChange}\n                        />\n                </div>\n                <div className='form-group'>\n                    <label for='songQuery'>Song Title</label>\n                    <input\n                        type='text'\n                        className='form-control'\n                        id='songQuery'\n                        onChange={this.songChange}\n                        />\n                </div>\n                <div className='form-group'>\n                    <label for='artistQuery'>Artist Name</label>\n                    <input\n                        type='text'\n                        className='form-control'\n                        id='artistQuery'\n                        onChange={this.artistChange}\n                        />\n                </div>\n                <button type='submit' className='btn btn-success'>Submit</button>\n            </form>\n            </div>\n        )\n    }\n}\n\nconst MainSearch = connect(null, mapDispatchToProps)(ConnectedMainSearch);\n\nexport default MainSearch;"]},"metadata":{},"sourceType":"module"}