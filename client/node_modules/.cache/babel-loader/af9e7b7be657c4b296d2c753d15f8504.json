{"ast":null,"code":"import _classCallCheck from \"/Users/DuhLite/Documents/music-search/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/DuhLite/Documents/music-search/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/DuhLite/Documents/music-search/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/DuhLite/Documents/music-search/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/DuhLite/Documents/music-search/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/DuhLite/Documents/music-search/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/DuhLite/Documents/music-search/client/src/components/search.js\";\nimport React, { Component } from 'react';\nimport { updateArtist as _updateArtist, updateSong as _updateSong, updateWord as _updateWord, clearSearch as _clearSearch } from \"../actions/index\";\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nvar styles = function styles(theme) {\n  return {\n    container: {\n      display: 'flex',\n      flexWrap: 'wrap'\n    },\n    TextField: {\n      marginLeft: theme.spacing.unit,\n      marginRight: theme.spacing.unit,\n      width: 200\n    }\n  };\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    word: state.word,\n    song: state.song,\n    artist: state.artist\n  };\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    updateArtist: function updateArtist(artist) {\n      return dispatch(_updateArtist(artist));\n    },\n    updateSong: function updateSong(song) {\n      return dispatch(_updateSong(song));\n    },\n    updateWord: function updateWord(word) {\n      return dispatch(_updateWord(word));\n    },\n    clearSearch: function clearSearch(clear) {\n      return dispatch(_clearSearch(clear));\n    }\n  };\n}\n\nvar ConnectedMainSearch =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ConnectedMainSearch, _Component);\n\n  function ConnectedMainSearch(props) {\n    var _this;\n\n    _classCallCheck(this, ConnectedMainSearch);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ConnectedMainSearch).call(this, props));\n\n    _this.wordChange = function (e) {\n      _this.props.updateWord(e.target.value);\n    };\n\n    _this.songChange = function (e) {\n      _this.props.updateSong(e.target.value);\n    };\n\n    _this.artistChange = function (e) {\n      _this.props.updateArtist(e.target.value);\n    };\n\n    _this.state = {\n      response: ''\n    };\n    _this.onSubmit = _this.onSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(ConnectedMainSearch, [{\n    key: \"onSubmit\",\n    value: function onSubmit(e) {\n      var _this2 = this;\n\n      e.preventDefault();\n      var newQuery = {\n        word: this.props.word,\n        song: this.props.song,\n        artist: this.props.artist\n      };\n      axios.post('/search', newQuery).then(function (res) {\n        _this2.setState({\n          response: res.data\n        });\n      }).catch(function (err) {\n        console.log(err);\n      });\n      this.props.clearSearch('');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var classes = this.props.classes;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.onSubmit,\n        className: classes.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        label: \"Word\",\n        onChange: this.wordChange,\n        value: this.props.word,\n        id: \"wordQuery\",\n        className: classes.TextField,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        label: \"Song Title\",\n        onChange: this.songChange,\n        value: this.props.song,\n        id: \"songQuery\",\n        className: classes.TextField,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        label: \"Artist Name\",\n        onChange: this.artistChange,\n        value: this.props.artist,\n        id: \"artistQuery\",\n        className: classes.TextField,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }), React.createElement(Button, {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"Submit\")), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        readOnly: true,\n        value: this.state.response,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return ConnectedMainSearch;\n}(Component);\n\nConnectedMainSearch.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nvar MainSearch = connect(mapStateToProps, mapDispatchToProps)(ConnectedMainSearch);\nexport default withStyles(styles)(MainSearch);","map":{"version":3,"sources":["/Users/DuhLite/Documents/music-search/client/src/components/search.js"],"names":["React","Component","updateArtist","updateSong","updateWord","clearSearch","connect","axios","PropTypes","withStyles","TextField","Button","styles","theme","container","display","flexWrap","marginLeft","spacing","unit","marginRight","width","mapStateToProps","state","word","song","artist","mapDispatchToProps","dispatch","clear","ConnectedMainSearch","props","wordChange","e","target","value","songChange","artistChange","response","onSubmit","bind","preventDefault","newQuery","post","then","res","setState","data","catch","err","console","log","classes","propTypes","object","isRequired","MainSearch"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {updateArtist,updateSong,updateWord,clearSearch} from \"../actions/index\";\nimport {connect} from 'react-redux';\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\nimport {withStyles} from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nconst styles = theme => ({\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap'\n    },\n    TextField: {\n        marginLeft: theme.spacing.unit,\n        marginRight: theme.spacing.unit,\n        width: 200\n    }\n})\n\nconst mapStateToProps = state => {\n    return {\n        word: state.word,\n        song: state.song,\n        artist: state.artist\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        updateArtist: artist => dispatch(updateArtist(artist)),\n        updateSong: song => dispatch(updateSong(song)),\n        updateWord: word => dispatch(updateWord(word)),\n        clearSearch: clear => dispatch(clearSearch(clear))\n    }\n}\n\nclass ConnectedMainSearch extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            response: ''\n        }\n\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    wordChange = (e) => {\n        this.props.updateWord(e.target.value);\n    };\n\n    songChange = (e) => {\n        this.props.updateSong(e.target.value);\n    }\n\n    artistChange = (e) => {\n        this.props.updateArtist(e.target.value);\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n\n        const newQuery = {\n            word: this.props.word,\n            song: this.props.song,\n            artist: this.props.artist\n        };\n\n        axios.post('/search', newQuery)\n            .then(res => {\n                this.setState({response: res.data});\n            })\n            .catch(err => {\n                console.log(err);\n            })\n        \n        this.props.clearSearch('');\n    }\n\n    render() {\n        const {classes} = this.props;\n        return (\n            <div>\n            <form onSubmit={this.onSubmit} className={classes.container} >\n                <TextField\n                    label='Word'\n                    onChange={this.wordChange}\n                    value = {this.props.word}\n                    id='wordQuery'\n                    className={classes.TextField}\n                    />\n                    <br/>\n                <TextField\n                    label='Song Title'\n                    onChange={this.songChange}\n                    value = {this.props.song}\n                    id='songQuery'\n                    className={classes.TextField}\n                    />\n                    <br/>\n                <TextField\n                    label='Artist Name'\n                    onChange={this.artistChange}\n                    value = {this.props.artist}\n                    id='artistQuery'\n                    className={classes.TextField}\n                    />\n                    <br/>\n                <Button type='submit'>\n                    Submit\n                </Button>\n            </form>\n            <div>\n                <input\n                    readOnly\n                    value={this.state.response}\n                    />\n            </div>\n            </div>\n        )\n    }\n}\n\nConnectedMainSearch.propTypes = {\n    classes: PropTypes.object.isRequired\n}\n\nconst MainSearch = connect(mapStateToProps, mapDispatchToProps)(ConnectedMainSearch);\n\nexport default withStyles(styles)(MainSearch);"]},"metadata":{},"sourceType":"module"}