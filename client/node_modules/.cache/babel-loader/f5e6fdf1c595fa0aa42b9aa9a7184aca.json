{"ast":null,"code":"import _classCallCheck from \"/Users/DuhLite/Documents/music-search/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/DuhLite/Documents/music-search/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/DuhLite/Documents/music-search/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/DuhLite/Documents/music-search/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/DuhLite/Documents/music-search/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/DuhLite/Documents/music-search/client/src/components/playlist-creator.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    artist: state.previous_artist,\n    song: state.previous_song,\n    accessToken: state.accessToken\n  };\n};\n\nvar ConnectedPlaylistCreator =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ConnectedPlaylistCreator, _Component);\n\n  function ConnectedPlaylistCreator(props) {\n    var _this;\n\n    _classCallCheck(this, ConnectedPlaylistCreator);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ConnectedPlaylistCreator).call(this, props));\n\n    _this.songChange = function (e) {\n      _this.setState({\n        currentSong: e.target.value\n      });\n    };\n\n    _this.artistChange = function (e) {\n      _this.setState({\n        currentArtist: e.target.value\n      });\n    };\n\n    _this.state = {\n      currentSong: '',\n      currentArtist: ''\n    };\n    return _this;\n  }\n\n  _createClass(ConnectedPlaylistCreator, [{\n    key: \"onSubmit\",\n    value: function onSubmit(e) {\n      e.preventDefault();\n      var newQuery = {\n        artist: this.state.currentArtist,\n        song: this.state.currentSong,\n        accessToken: this.props.accessToken\n      };\n      axios.post('http://localhost:5000/spotsearch', newQuery).then(function (res) {\n        console.log(res.data);\n      }).catch(function (err) {\n        console.log(err);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Song Title\"), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        id: \"songSearch\",\n        value: this.state.currentSong,\n        defaultValue: this.props.song,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"Artist Name\"), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        id: \"artistSearch\",\n        value: this.state.currentArtist,\n        defaultValue: this.props.artist,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Submit\",\n        className: \"btn btn-success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return ConnectedPlaylistCreator;\n}(Component);\n\nvar PlaylistCreator = connect(mapStateToProps)(ConnectedPlaylistCreator);\nexport default PlaylistCreator;","map":{"version":3,"sources":["/Users/DuhLite/Documents/music-search/client/src/components/playlist-creator.js"],"names":["React","Component","connect","axios","mapStateToProps","state","artist","previous_artist","song","previous_song","accessToken","ConnectedPlaylistCreator","props","songChange","e","setState","currentSong","target","value","artistChange","currentArtist","preventDefault","newQuery","post","then","res","console","log","data","catch","err","onSubmit","PlaylistCreator"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport axios from 'axios';\n\nconst mapStateToProps = state => {\n    return {\n        artist: state.previous_artist,\n        song: state.previous_song,\n        accessToken: state.accessToken\n\n    }\n}\n\nclass ConnectedPlaylistCreator extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            currentSong: '',\n            currentArtist: ''\n        }\n    }\n\n    songChange = (e) => {\n        this.setState({currentSong: e.target.value});\n    }\n\n    artistChange = (e) => {\n        this.setState({currentArtist: e.target.value});\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n\n        const newQuery = {\n            artist: this.state.currentArtist,\n            song: this.state.currentSong,\n            accessToken: this.props.accessToken\n        }\n\n        axios.post('http://localhost:5000/spotsearch',newQuery)\n            .then(res => {\n                console.log(res.data)\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n\n    render() {\n        return (\n            <div>\n            <form onSubmit={this.onSubmit}>\n                <div className='form-group'>\n                    <label>Song Title</label>\n                    <input\n                        type='text'\n                        className='form-control'\n                        id='songSearch'\n                        value={this.state.currentSong}\n                        defaultValue={this.props.song}\n                        />\n                </div>\n                <div className='form-group'>\n                    <label>Artist Name</label>\n                    <input\n                        type='text'\n                        className='form-control'\n                        id='artistSearch'\n                        value={this.state.currentArtist}\n                        defaultValue={this.props.artist}\n                        />\n                </div>\n                <div className='form-group'>\n                <input \n                    type='submit'\n                    value=\"Submit\" \n                    className='btn btn-success'\n                    />\n                </div>\n            </form>\n            </div>\n        )\n    }\n}\n\nconst PlaylistCreator = connect(mapStateToProps)(ConnectedPlaylistCreator);\n\nexport default PlaylistCreator;"]},"metadata":{},"sourceType":"module"}