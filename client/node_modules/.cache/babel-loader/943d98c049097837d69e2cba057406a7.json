{"ast":null,"code":"import _classCallCheck from \"/Users/DuhLite/Documents/music-search/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/DuhLite/Documents/music-search/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/DuhLite/Documents/music-search/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/DuhLite/Documents/music-search/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/DuhLite/Documents/music-search/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/DuhLite/Documents/music-search/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/DuhLite/Documents/music-search/client/src/components/search.js\";\nimport React, { Component } from 'react';\nimport { updateArtist as _updateArtist, updateSong as _updateSong, updateWord as _updateWord } from \"../actions/index\";\nimport { connect } from 'react-redux';\nimport axios from 'axios';\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    word: state.word,\n    song: state.song,\n    artist: state.artist\n  };\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    updateArtist: function updateArtist(artist) {\n      return dispatch(_updateArtist(artist));\n    },\n    updateSong: function updateSong(song) {\n      return dispatch(_updateSong(song));\n    },\n    updateWord: function updateWord(word) {\n      return dispatch(_updateWord(word));\n    }\n  };\n}\n\nvar ConnectedMainSearch =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ConnectedMainSearch, _Component);\n\n  function ConnectedMainSearch(props) {\n    var _this;\n\n    _classCallCheck(this, ConnectedMainSearch);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ConnectedMainSearch).call(this, props));\n\n    _this.wordChange = function (e) {\n      _this.props.updateWord(e.target.value);\n    };\n\n    _this.songChange = function (e) {\n      _this.props.updateSong(e.target.value);\n    };\n\n    _this.artistChange = function (e) {\n      _this.props.updateArtist(e.target.value);\n    };\n\n    _this.onSubmit = function (e) {\n      e.preventDefault();\n      var newQuery = {\n        word: _this.props.word,\n        song: _this.props.song,\n        artist: _this.props.artist\n      };\n      console.log(newQuery);\n      axios.post('http://localhost:5000/search', newQuery).then(function (res) {\n        console.log(res);\n      }).catch(function (err) {\n        console.log(err);\n      });\n\n      _this.props.updateSong('');\n\n      _this.props.updateArtist('');\n\n      _this.props.updateWord('');\n    };\n\n    _this.onSubmit = _this.onSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(ConnectedMainSearch, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"Words\"), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        id: \"wordQuery\",\n        onChange: this.wordChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"Song Title\"), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        id: \"songQuery\",\n        onChange: this.songChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"Artist Name\"), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        id: \"artistQuery\",\n        onChange: this.artistChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-success\",\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"Submit\")));\n    }\n  }]);\n\n  return ConnectedMainSearch;\n}(Component);\n\nvar MainSearch = connect(mapStateToProps, mapDispatchToProps)(ConnectedMainSearch);\nexport default MainSearch;","map":{"version":3,"sources":["/Users/DuhLite/Documents/music-search/client/src/components/search.js"],"names":["React","Component","updateArtist","updateSong","updateWord","connect","axios","mapStateToProps","state","word","song","artist","mapDispatchToProps","dispatch","ConnectedMainSearch","props","wordChange","e","target","value","songChange","artistChange","onSubmit","preventDefault","newQuery","console","log","post","then","res","catch","err","bind","MainSearch"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {updateArtist,updateSong,updateWord} from \"../actions/index\";\nimport {connect} from 'react-redux';\nimport axios from 'axios';\n\nconst mapStateToProps = state => {\n    return {\n        word: state.word,\n        song: state.song,\n        artist: state.artist\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        updateArtist: artist => dispatch(updateArtist(artist)),\n        updateSong: song => dispatch(updateSong(song)),\n        updateWord: word => dispatch(updateWord(word))\n    }\n}\n\nclass ConnectedMainSearch extends Component {\n    constructor(props) {\n        super(props);\n        this.onSubmit = this.onSubmit.bind(this)\n    }\n\n    wordChange = (e) => {\n        this.props.updateWord(e.target.value);\n    };\n\n    songChange = (e) => {\n        this.props.updateSong(e.target.value);\n    }\n\n    artistChange = (e) => {\n        this.props.updateArtist(e.target.value);\n    }\n\n    onSubmit = (e) => {\n        e.preventDefault();\n\n        const newQuery = {\n            word: this.props.word,\n            song: this.props.song,\n            artist: this.props.artist\n        };\n\n        console.log(newQuery);\n\n        axios.post('http://localhost:5000/search', newQuery)\n            .then(res => {\n                console.log(res)\n            })\n            .catch(err =>{\n                console.log(err)\n            })\n        \n        this.props.updateSong('');\n        this.props.updateArtist('');\n        this.props.updateWord('');\n    }\n\n    render() {\n        return (\n            <div>\n            <form>\n                <div className='form-group'>\n                    <label>Words</label>\n                    <input\n                        type='text'\n                        className='form-control'\n                        id='wordQuery'\n                        onChange={this.wordChange}\n                        />\n                </div>\n                <div className='form-group'>\n                    <label>Song Title</label>\n                    <input\n                        type='text'\n                        className='form-control'\n                        id='songQuery'\n                        onChange={this.songChange}\n                        />\n                </div>\n                <div className='form-group'>\n                    <label>Artist Name</label>\n                    <input\n                        type='text'\n                        className='form-control'\n                        id='artistQuery'\n                        onChange={this.artistChange}\n                        />\n                </div>\n                <button \n                    type='submit' \n                    className='btn btn-success'\n                    onSubmit={this.onSubmit}\n                    >Submit\n                </button>\n            </form>\n            </div>\n        )\n    }\n}\n\nconst MainSearch = connect(mapStateToProps, mapDispatchToProps)(ConnectedMainSearch);\n\nexport default MainSearch;"]},"metadata":{},"sourceType":"module"}